{"version":3,"sources":["constants.js","reducers.js","components/card.js","components/cardList.js","components/searchBox.js","components/Scroll.js","components/Error.js","containers/app.js","actions.js","index.js"],"names":["initialStateSearch","searchBar","initialStateRobots","isPending","robots","error","Card","id","name","email","className","alt","src","CardList","length","style","height","width","map","item","key","SearchBox","onSearchChange","numOfRobots","onChange","type","placeholder","Scroll","props","overflowY","children","Error","Component","constructor","super","this","state","catch_error","componentDidCatch","setState","render","App","React","componentDidMount","onRequestRobots","filteredRobots","filter","robot","toLowerCase","includes","overflow","connect","searchRobots","requestRobots","action","event","payload","target","value","request","fetch","then","response","json","data","catch","rootRducer","combineReducers","Object","assign","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f67f61b1.chunk.js","sourcesContent":["export const CHANGE_SEARCH_BAR = 'CHANGE_SEARCH_BAR';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import {\r\n\tCHANGE_SEARCH_BAR,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n}  from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n\tsearchBar :  ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch,action={}) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_SEARCH_BAR :\r\n\t\treturn Object.assign({},state,{searchBar : action.payload });\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\nconst initialStateRobots = {\r\n\tisPending : false,\r\n\trobots : [],\r\n\terror : ''\r\n}\r\nexport const requestRobots = (state=initialStateRobots,action={})  => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING :\r\n\t\treturn Object.assign({},state, {isPending : true});\r\n\t\tcase REQUEST_ROBOTS_SUCCESS :\r\n\t\treturn Object.assign({},state, {robots : action.payload , isPending : false});\r\n\t\tcase REQUEST_ROBOTS_FAILED :\r\n\t\treturn Object.assign({},state, {error : action.payload , isPending : false});\r\n\t\tdefault :\r\n\t\treturn state;\r\n\t}\r\n}","import React from 'react';\r\n\r\nconst Card = ({id,name,email}) => {\r\n      return (\r\n      \t        <div className=\"tc dib pa2 ma2 br3 bg-light-yellow grow bw5 shadow-5\">\r\n                    <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`} />\r\n                 \t<h2>{name}</h2>\r\n                 \t<p>{email}</p>\r\n                 </div>\r\n      \t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card'\r\nconst CardList = ({robots,error}) => {\r\n\t             if(error.length) {\r\n\t             \treturn (\r\n                          <div style={{height:'70vh', width : '100%'}}className=' f3 flex justify-center items-center'>\r\n                          <h3>the robots not found for now something went wrong</h3>\r\n                          </div>\r\n\t             \t\t);\r\n\t             }\r\n\t            return (\r\n\t            robots.map( item => {\r\n                   return (\r\n                      <Card key={item.id} id={item.id} name={item.name} email={item.email} />\r\n                  )\r\n\t            }\r\n            )\r\n\t            \t);\r\n\r\n          \t\t\r\n          \r\n\t\t\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({onSearchChange,numOfRobots}) => {\r\n\t   return (\r\n\t <div className=\"pa3\">\r\n\t  <input onChange={onSearchChange} className=\"pa3 ba b--gold bg-light-yellow\" type=\"text\" placeholder=\"search a robot\" />\r\n\t  </div>\r\n\t  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\t\t   \treturn(\r\n\t\t   \t<div style={{overflowY:'auto', height:'75vh', width:'100%'}} className=\"dib pa2\">\r\n\t          {props.children}\r\n          </div>\r\n          );\r\n          \r\n\t\t\r\n} \r\nexport default Scroll;","\r\nimport React , { Component } from 'react';\r\n\r\nclass Error extends Component {\r\n\tconstructor () {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tcatch_error : false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch () {\r\n\t\tthis.setState({catch_error : true})\r\n\t}\r\n\trender () {\r\n       return this.state.catch_error ? \r\n       <div style={{height:'100vh'}}className='flex justify-center items-center'><h1>something went wrong.</h1></div> :\r\n       this.props.children\r\n\t}\r\n}\r\nexport default Error;","import React from 'react';\r\nimport  CardList from '../components/cardList';\r\nimport SearchBox from '../components/searchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport Error from '../components/Error'\r\nimport {connect} from 'react-redux';\r\nimport {setSearchBar,requestRobots} from '../actions';\r\nimport './defaults.css';\r\nimport './app.css';\r\n\r\n const state = (state) => {\r\n  return {\r\n    searchBar :state.searchRobots.searchBar,\r\n    robots : state.requestRobots.robots,\r\n    isPending : state.requestRobots.isPending ,\r\n    error : state.requestRobots.error\r\n  }\r\n }\r\n const action = (action) => {\r\n  return {\r\n          onSearchChange: (event) => action(setSearchBar(event.target.value)) ,\r\n          onRequestRobots: () => action(requestRobots()) \r\n         }\r\n      \r\n }\r\nclass  App extends React.Component {\r\n\r\n          componentDidMount (){\r\n              this.props.onRequestRobots();\r\n          }\r\n\r\n           render() {\r\n            \r\n            const {searchBar,onSearchChange, robots , isPending, error} = this.props;\r\n             \r\n           const filteredRobots= robots.filter(robot => {\r\n         \treturn robot.name.toLowerCase().includes( searchBar.toLowerCase())\r\n               });\r\n           \r\n             return  isPending ? \r\n                <Error>\r\n             <div style={{height:'100vh'}}className='flex justify-center items-center'><h1>Loading</h1></div>\r\n             </Error>\r\n             :\r\n           \t  (\r\n                <Error>\r\n                <div className=\"tc\" style={{overflow:'hidden'}} >\r\n                <h1 className=\"f2 ma2\">RoboFriends</h1>\r\n                <SearchBox onSearchChange={onSearchChange}/>\r\n                <Scroll numOfRobots={filteredRobots.length}>\r\n                    <CardList robots={filteredRobots} error={error}/>\r\n                </Scroll>\r\n                </div>\r\n                </Error>\r\n           \t \t)\r\n           }\r\n}\r\n\r\nexport default connect(state,action)(App);","import {\r\n\tCHANGE_SEARCH_BAR ,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n}  from './constants.js';\r\n\r\nexport const setSearchBar = (text) => ({\r\n      type : CHANGE_SEARCH_BAR ,\r\n      payload : text\r\n})\r\n\r\nexport const requestRobots = () => (request)  => {\r\n\trequest({type: REQUEST_ROBOTS_PENDING});\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => request({type: REQUEST_ROBOTS_SUCCESS , payload: data}))\r\n    .catch(error => request({type: REQUEST_ROBOTS_FAILED, payload: 'error'}))\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware, combineReducers} from 'redux';\r\nimport  thunkMiddleware from 'redux-thunk';\r\nimport {searchRobots, requestRobots } from './reducers';\r\nimport  App from './containers/app';\r\nimport {createLogger} from 'redux-logger'\r\nimport './index.css';\r\nimport 'tachyons';\r\n   const rootRducer = combineReducers({searchRobots,requestRobots})\r\n   const logger=createLogger();\r\n   const store = createStore(rootRducer,applyMiddleware(thunkMiddleware,logger));\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>\r\n     <App />\r\n     </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}