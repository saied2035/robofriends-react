{"version":3,"sources":["constants.js","reducers.js","components/card.js","components/cardList.js","components/searchBox.js","containers/app.js","actions.js","index.js"],"names":["CHANGE_SEARCH_BAR","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchBar","initialStateRobots","isPending","robots","error","Card","id","name","email","className","alt","src","CardList","length","style","height","width","map","item","SearchBox","onSearchChange","numOfRobots","onChange","type","placeholder","App","React","Component","componentDidMount","this","props","onRequestRobots","render","filteredRobots","filter","robot","toLowerCase","includes","overflow","connect","state","searchRobots","requestRobots","action","event","text","target","value","payload","request","fetch","then","response","json","data","catch","rootRducer","combineReducers","Object","assign","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7ee0abf.chunk.js","sourcesContent":["export const CHANGE_SEARCH_BAR = 'CHANGE_SEARCH_BAR';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import {\r\n\tCHANGE_SEARCH_BAR,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n}  from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n\tsearchBar :  ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch,action={}) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_SEARCH_BAR :\r\n\t\treturn Object.assign({},state,{searchBar : action.payload });\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\nconst initialStateRobots = {\r\n\tisPending : false,\r\n\trobots : [],\r\n\terror : ''\r\n}\r\nexport const requestRobots = (state=initialStateRobots,action={})  => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING :\r\n\t\treturn Object.assign({},state, {isPending : true});\r\n\t\tcase REQUEST_ROBOTS_SUCCESS :\r\n\t\treturn Object.assign({},state, {robots : action.payload , isPending : false});\r\n\t\tcase REQUEST_ROBOTS_FAILED :\r\n\t\treturn Object.assign({},state, {error : action.payload , isPending : false});\r\n\t\tdefault :\r\n\t\treturn state;\r\n\t}\r\n}","import React from 'react';\r\n\r\nconst Card = ({id,name,email}) => {\r\n      return (\r\n      \t        <div className=\"tc dib pa2 ma2 br3 bg-light-yellow grow bw5 shadow-5\">\r\n                    <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`} />\r\n                 \t<h2>{name}</h2>\r\n                 \t<p>{email}</p>\r\n                 </div>\r\n      \t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card'\r\nconst CardList = ({robots,error}) => {\r\n\t             if(error.length) {\r\n\t             \treturn (\r\n                          <div style={{height:'70vh', width : '100%'}}className=' f3 flex justify-center items-center'>\r\n                          <h3>the robots not found for now something went wrong</h3>\r\n                          </div>\r\n\t             \t\t);\r\n\t             }\r\n\t            return (\r\n\t            robots.map( item => {\r\n                   return (\r\n                      <Card key={item.id} id={item.id} name={item.name} email={item.email} />\r\n                  )\r\n\t            }\r\n            )\r\n\t            \t);\r\n\r\n          \t\t\r\n          \r\n\t\t\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({onSearchChange,numOfRobots}) => {\r\n\t   return (\r\n\t <div className=\"pa3\">\r\n\t  <input onChange={onSearchChange} className=\"pa3 ba b--gold bg-light-yellow\" type=\"text\" placeholder=\"search a robot\" />\r\n\t  </div>\r\n\t  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport  CardList from '../components/cardList';\r\nimport SearchBox from '../components/searchBox';\r\nimport {connect} from 'react-redux';\r\nimport {setSearchBar,requestRobots} from '../actions';\r\nimport './defaults.css';\r\nimport './app.css';\r\n\r\n const state = (state) => {\r\n  return {\r\n    searchBar :state.searchRobots.searchBar,\r\n    robots : state.requestRobots.robots,\r\n    isPending : state.requestRobots.isPending ,\r\n    error : state.requestRobots.error\r\n  }\r\n }\r\n const action = (action) => {\r\n  return {\r\n          onSearchChange: (event) => action(setSearchBar(event.target.value)) ,\r\n          onRequestRobots: () => action(requestRobots()) \r\n         }\r\n      \r\n }\r\nclass  App extends React.Component {\r\n\r\n          componentDidMount (){\r\n              this.props.onRequestRobots();\r\n          }\r\n\r\n           render() {\r\n            \r\n            const {searchBar,onSearchChange, robots , isPending, error} = this.props;\r\n             \r\n           const filteredRobots= robots.filter(robot => {\r\n         \treturn robot.name.toLowerCase().includes( searchBar.toLowerCase())\r\n               });\r\n           \r\n             return  isPending ? \r\n             <div style={{height:'100vh'}}className='flex justify-center items-center'><h1>Loading</h1></div>\r\n             :\r\n           \t  (\r\n                <div className=\"tc\" style={{overflow:'hidden'}} >\r\n                <h1 className=\"f2 ma2\">RoboFriends</h1>\r\n                <SearchBox onSearchChange={onSearchChange}/>\r\n                <div style={{height:'75vh',overflow:'auto'}}>\r\n                    <CardList robots={filteredRobots} error={error}/>\r\n                </div>    \r\n                </div>\r\n           \t \t)\r\n           }\r\n}\r\n\r\nexport default connect(state,action)(App);","import {\r\n\tCHANGE_SEARCH_BAR ,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n}  from './constants.js';\r\n\r\nexport const setSearchBar = (text) => ({\r\n      type : CHANGE_SEARCH_BAR ,\r\n      payload : text\r\n})\r\n\r\nexport const requestRobots = () => (request)  => {\r\n\trequest({type: REQUEST_ROBOTS_PENDING});\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => request({type: REQUEST_ROBOTS_SUCCESS , payload: data}))\r\n    .catch(error => request({type: REQUEST_ROBOTS_FAILED, payload: 'error'}))\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware, combineReducers} from 'redux';\r\nimport  thunkMiddleware from 'redux-thunk';\r\nimport {searchRobots, requestRobots } from './reducers';\r\nimport  App from './containers/app';\r\nimport {createLogger} from 'redux-logger'\r\nimport './index.css';\r\nimport 'tachyons';\r\n   const rootRducer = combineReducers({searchRobots,requestRobots})\r\n   const logger=createLogger();\r\n   const store = createStore(rootRducer,applyMiddleware(thunkMiddleware,logger));\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>\r\n     <App />\r\n     </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}